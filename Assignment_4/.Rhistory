# Load Data
data <- read.table('https://raw.githubusercontent.com/WinVector/zmPDSwR/master/Custdata/custdata.tsv',
header=TRUE,sep='\t')
data
View(data)
# checking the null or missing values
Null_Counter <- apply(custdata, 2, function(x) length(which(x == "" | is.na(x) | x == "NA" | x == "999" | x == "0"))/length(x))
# checking the null or missing values
Null_Counter <- apply(data, 2, function(x) length(which(x == "" | is.na(x) | x == "NA" | x == "999" | x == "0"))/length(x))
Null_Counter
summary(data)
numVars <- names(which(sapply(data, is.numeric)))
catVars <- names(which(sapply(custdata, is.factor)))
catVars <- names(which(sapply(data, is.factor)))
# 3. Identify the appropriate descriptive statistics and graph for this data set.
# Execute on those and use the comments to discuss relevant relationships or insights discovered.
# 2 points
indices <- which(sapply(BostonHousing, is.numeric))
# 3. Identify the appropriate descriptive statistics and graph for this data set.
# Execute on those and use the comments to discuss relevant relationships or insights discovered.
# 2 points
indices <- which(sapply(data, is.numeric))
cor(data[indices])
# 4. Create a correlation matrix for all of the numeric variables.
# 2 points
indices <- which(sapply(data, is.numeric))
cor(data[indices])
# Load Data
data <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=TRUE,sep='\t')
summary(data)
# Load Data
data <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=TRUE,sep=',')
summary(data)
# Load Data
data <- read.csv('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=TRUE)
summary(data)
# Load Data
data <- read.csv('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=F)
summary(data)
# Load Data
data <- read.csv('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=F, sep = '\t')
summary(data)
# Load Data
data <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=F, sep = '\t')
summary(data)
# Load Data
data <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=F, sep = ' ')
summary(data)
# Load Data
data <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=F, sep = ' ')
summary(data)
# Load Data
data <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=F, sep = '\t')
summary(data)
View(data)
separate(data = data, col = V1, into = c("left", "right"), sep = "\\s")
# Load Data
library(tidyr)
separate(data = data, col = V1, into = c("left", "right"), sep = "\\s")
d <- separate(data = data, col = V1, into = c("left", "right"), sep = "\\s")
View(d)
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "\\s")
summary(data)
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "\t")
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "\\s{3}")
summary(data)
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "(\\s{3})|(\\s{6})")
summary(data)
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "[\\s{3}\\s{6}]")
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "\\s{3}")
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "(?=[^ ]+$)")
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = " (?=[^ ]+$)")
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "[^ ]+$")
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "^\\s +$")
d <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "\\s+")
colnames(data)[which(names(data) == "V2")] <- "car name"
data <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=F, sep = '\t')
data <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "\\s+")
colnames(data)[which(names(data) == "V2")] <- "car name"
summary(data)
for i in names(data){
d <- transform(data, data[i])
}
names(data)
for i in names(data){
d <- transform(data, data[i]= as.numeric(data[i]))
}
for (i in names(data)){
d <- transform(data, data[i]= as.numeric(data[i]))
}
for (i in names(data)){
d <- transform(data, data$i= as.numeric(data$i))
}
for (i in names(data)){
d <- transform(data, data[[i]]= as.numeric(data[[i]]))
}
for (i in names(data){
num_col <- c('mpg', 'cylinders', 'displacement', 'horsepower', 'weight', 'acceleration', 'model year', 'origin', 'car name')
data[num_col] <- sapply(data[num_col],as.numeric)
num_col <- c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin', 'car name')
data[num_col] <- sapply(data[num_col],as.numeric)
summary(data)
# checking the null or missing values
Null_Counter <- apply(data, 2, function(x) length(which(x == "" | is.na(x) | x == "NA" | x == "999" | x == "0"))/length(x))
Null_Counter
hist(data$horsepower)
numVars <- names(which(sapply(data, is.numeric)))
numVars <- names(which(sapply(data, is.numeric)))
catVars <- names(which(sapply(data, is.factor)))
# Load Data
library(tidyr)
data <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data',
header=F, sep = '\t')
data <- separate(data = data, col = V1, into = c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin'), sep = "\\s+")
colnames(data)[which(names(data) == "V2")] <- "car name"
summary(data)
num_col <- c("mpg", "cylinders", "displacement", "horsepower", "weight", "cceleration", "model year", 'origin')
data[num_col] <- sapply(data[num_col],as.numeric)
summary(data)
numVars <- names(which(sapply(data, is.numeric)))
catVars <- names(which(sapply(data, is.factor)))
# checking the null or missing values
Null_Counter <- apply(data, 2, function(x) length(which(x == "" | is.na(x) | x == "NA" | x == "999" | x == "0"))/length(x))
Null_Counter
Null_Counter
# checking the null or missing values
# Null_Counter <- apply(data, 2, function(x) length(which(x == "" | is.na(x) | x == "NA" | x == "999" | x == "0"))/length(x))
Null_Counter <- apply(data, 2, function(x) length(which(x == is.na(x)))/length(x))
Null_Counter
# checking the null or missing values
# Null_Counter <- apply(data, 2, function(x) length(which(x == "" | is.na(x) | x == "NA" | x == "999" | x == "0"))/length(x))
Null_Counter <- apply(data, 2, function(x) length(which(x == x == "NA" ))/length(x))
Null_Counter
# checking the null or missing values
# Null_Counter <- apply(data, 2, function(x) length(which(x == "" | is.na(x) | x == "NA" | x == "999" | x == "0"))/length(x))
Null_Counter <- apply(data, 2, function(x) length(which(is.na(x) | x == "NA" ))/length(x))
Null_Counter
# checking the null or missing values
# Null_Counter <- apply(data, 2, function(x) length(which(x == "" | is.na(x) | x == "NA" | x == "999" | x == "0"))/length(x))
Null_Counter <- apply(data, 2, function(x) length(which(is.na(x)))/length(x))
Null_Counter
# 4. Create a correlation matrix for all of the numeric variables.
# 2 points
indices <- which(sapply(data, is.numeric))
cor(data[indices])
correlation <- cor(data[indices])
View(correlation)
summary(data)
data$horsepower <- apply(data$horsepower, function(x) which(is.na(x)) = 93.5)
